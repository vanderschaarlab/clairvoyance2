# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = clairvoyance2
description = clairvoyance2: a Unified Toolkit for Medical Time Series
author = Evgeny Saveliev
author_email = e.s.saveliev@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://www.vanderschaar-lab.com/
# Add here related links, for example:
project_urls =
    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.7

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    torch
    pandas
    numpy
    matplotlib
    scikit-learn
    scipy
    unlzw3
    dotmap
    typing_extensions


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install clairvoyance2[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    jupyter
    notebook
    bandit
    black
    black-nb
    darglint
    doc8
    flake8
    isort
    nbconvert
    nbformat
    pytest-benchmark
    pytest-xdist[psutil]
    pytest-xprocess
    igraph
    py # pytest 7.2.0 bug https://github.com/pytest-dev/pytest-xprocess/issues/110
    pre-commit


[bdist_wheel]
# Use this option if your package is pure-python
# Note: we do not support Python 2, hence 0.
universal = 0

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 120
select = C,E,F,W,B,B950
extend_ignore = E203, E501, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
#    Additionally updated from:
#    https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#line-length
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

# Pylint compatibility with black.
# Source: https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html
[pylint]
max-line-length = 120
disable = R, C
generated-members = torch.*

[pylint.messages_control]
disable = C0330, C0326, fixme

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.2.3
package = clairvoyance2
extensions =
    markdown
    no_skeleton
    pre_commit
